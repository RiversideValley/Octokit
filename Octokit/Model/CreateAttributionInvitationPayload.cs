namespace Octokit.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq.Expressions;
    using Octokit.Core;
    using Octokit.Core.Builders;

    /// <summary>
    /// Autogenerated return type of CreateAttributionInvitation
    /// </summary>
    public class CreateAttributionInvitationPayload : QueryableValue<CreateAttributionInvitationPayload>
    {
        internal CreateAttributionInvitationPayload(Expression expression) : base(expression)
        {
        }

        /// <summary>
        /// A unique identifier for the client performing the mutation.
        /// </summary>
        public string ClientMutationId { get; }

        /// <summary>
        /// The owner scoping the reattributable data.
        /// </summary>
        public Organization Owner => this.CreateProperty(x => x.Owner, Octokit.Model.Organization.Create);

        /// <summary>
        /// The account owning the data to reattribute.
        /// </summary>
        public Claimable Source => this.CreateProperty(x => x.Source, Octokit.Model.Claimable.Create);

        /// <summary>
        /// The account which may claim the data.
        /// </summary>
        public Claimable Target => this.CreateProperty(x => x.Target, Octokit.Model.Claimable.Create);

        internal static CreateAttributionInvitationPayload Create(Expression expression)
        {
            return new CreateAttributionInvitationPayload(expression);
        }
    }
}